generator client {
  provider      = "prisma-client-js"
  output        = "./generated"
  engineType    = "binary"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             BigInt                @id @unique
  username       String?
  discriminator  Int?
  nickname       String?
  joinedServerAt DateTime?
  messages       Message[]
  responses      AssociatesResponses[]
}

model Message {
  id        BigInt   @id @unique
  author    User     @relation(fields: [userId], references: [id])
  createdAt DateTime
  content   String
  userId    BigInt
  channelId BigInt
  guildId   BigInt
}

model QuestionChoice {
  id         BigInt              @id @unique @default(autoincrement())
  choice     String
  question   AssociatesQuestions @relation(fields: [questionId], references: [id])
  questionId BigInt
}

model AssociatesConfiguration {
  id             BigInt  @id @unique @default(autoincrement())
  category       BigInt?
  retryDelayDays Int?
}

enum AssociatesQuestionTypes {
  MULTIPLE_CHOICE
  SINGLE_CHOICE
}

model AssociatesQuestions {
  id       BigInt                  @id @unique @default(autoincrement())
  question String
  choices  QuestionChoice[]
  type     AssociatesQuestionTypes
  answer   String
  quiz     AssociatesQuiz[]
}

model AssociatesResponses {
  id        BigInt   @id @unique @default(autoincrement())
  score     Int
  userId    BigInt
  channelId BigInt
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime
  updatedAt DateTime
}

model AssociatesQuiz {
  id         BigInt                @id @unique @default(autoincrement())
  createdAt  DateTime
  updatedAt  DateTime
  questionId BigInt
  questions  AssociatesQuestions[]
}
